{"ast":null,"code":"import { useState } from 'react';\nimport { isFunction } from \"@src/utils/checkType\"; // 灵感来源于知乎上的筛选出符合函数的类型\n\n/**\n *  接受一个值和方法进行hooks化\n * @param {T} initState 初始化值\n * @param {K} methods 需要hooks话的方法\n * @returns {[T, ReturnMethods<K, T>]}\n */\nfunction useMethods(initState, methods) {\n  var _useState = useState(function () {\n    return initState;\n  }),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var methodsTypes = Object.keys(methods);\n  var boundMethods = methodsTypes.reduce(function (newMethods, name) {\n    var fn = methods[name];\n\n    if (isFunction(fn)) {\n      newMethods[name] = function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        setValue(function (value) {\n          return fn.apply(void 0, [value].concat(args));\n        });\n      };\n    }\n\n    return newMethods;\n  }, {});\n  return [value, boundMethods];\n}\n\nexport default useMethods;","map":null,"metadata":{},"sourceType":"module"}