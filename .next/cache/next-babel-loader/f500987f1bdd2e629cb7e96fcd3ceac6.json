{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useMemo } from \"react\";\nimport marked from 'marked';\nimport { useRouter } from \"next/router\";\nimport Prism from \"prismjs/components/prism-core\";\nimport \"prismjs/components/prism-markup\";\nimport \"prismjs/components/prism-css\";\nimport \"prismjs/components/prism-clike\";\nimport \"prismjs/components/prism-javascript\";\nimport \"prismjs/components/prism-docker\";\nimport \"prismjs/components/prism-less\";\nimport \"prismjs/components/prism-typescript\";\nimport \"prismjs/components/prism-nginx\";\nimport \"prismjs/components/prism-scss\";\nimport \"prismjs/components/prism-jsx\";\nimport \"prismjs/components/prism-tsx\";\nimport \"prismjs/components/prism-regex\";\nimport \"prismjs/plugins/highlight-keywords/prism-highlight-keywords\";\nimport \"prismjs/plugins/normalize-whitespace/prism-normalize-whitespace\";\nimport useFormatDate from \"@src/hooks/useFormatDate\";\nimport { Loading } from \"@src/components\";\nimport { usePromise, useTitle } from '@src/hooks/index';\nimport { getArticleById } from '@src/services/article';\nimport './styles.scss';\nmarked.setOptions({\n  highlight: function highlight(code, lang) {\n    return Prism.highlight(code, Prism.languages[lang], lang);\n  }\n});\n\nvar Post = function Post(props) {\n  var serverArticleData = props.serverArticleData,\n      serverSucceed = props.serverSucceed;\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _usePromise = usePromise( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", getArticleById({\n                id: id\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [id], {\n    defaultData: serverArticleData,\n    defaultLoading: !serverSucceed\n  }),\n      getArticleDetail = _usePromise.promiseFn,\n      data = _usePromise.res.data,\n      loading = _usePromise.loading;\n\n  var title = data.title,\n      _data$content = data.content,\n      content = _data$content === void 0 ? '' : _data$content,\n      createdStamp = data.createdStamp;\n  var time = useFormatDate(createdStamp); // 修改标题\n\n  useTitle(title);\n  useEffect(function () {\n    if (!id) {\n      //不存在id\n      router.replace('/home');\n    } else {\n      // 如果服务端请求成功了 那么直接返回即可\n      if (serverSucceed) {\n        return;\n      }\n\n      getArticleDetail(id);\n    } // eslint-disable-next-line\n\n  }, [id]);\n  var html = useMemo(function () {\n    return marked(content);\n  }, [content]);\n  return __jsx(\"div\", {\n    className: \"content\"\n  }, loading ? __jsx(\"div\", {\n    className: \"post-loading\"\n  }, __jsx(Loading, {\n    size: 50\n  }, \"\\u6587\\u7AE0\\u52A0\\u8F7D\\u4E2D\")) : __jsx(\"div\", {\n    className: \"post\"\n  }, __jsx(\"div\", {\n    className: \"title\"\n  }, title), __jsx(\"div\", {\n    className: \"byline\"\n  }, __jsx(\"div\", {\n    className: \"author\"\n  }, \"carrotWu\"), __jsx(\"div\", {\n    className: \"time\"\n  }, time)), __jsx(\"div\", {\n    className: \"markdown-body\",\n    dangerouslySetInnerHTML: {\n      __html: html\n    }\n  })));\n};\n\nexport var __N_SSP = true;\nexport default Post;","map":null,"metadata":{},"sourceType":"module"}