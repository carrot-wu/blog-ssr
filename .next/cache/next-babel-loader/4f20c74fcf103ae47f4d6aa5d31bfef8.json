{"ast":null,"code":"import { useState, useCallback, useEffect } from \"react\";\nexport default function useInfinite(loadFn, options = {}) {\n  const {\n    pageSize = 10,\n    defaultPage = 1,\n    immediate = false,\n    hasMore: defaultHasMore = true,\n    defaultList = [],\n    defaultLoading = true\n  } = options; // loadFn 是一个异步函数 最终返回的res 包含 {data, pageNo, totalPage}\n\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(defaultLoading);\n  const {\n    0: pageNum,\n    1: setPageNum\n  } = useState(defaultPage);\n  const {\n    0: dataList,\n    1: setDataList\n  } = useState(defaultList);\n  const {\n    0: hasMore,\n    1: setHasMore\n  } = useState(defaultHasMore);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const initLoad = useCallback(async () => {\n    try {\n      setError(null);\n      setLoading(true);\n      const result = await loadFn({\n        pageNum,\n        pageSize\n      });\n      let {\n        nextPage,\n        totalPage,\n        list\n      } = result;\n      setDataList(dataList.concat(list));\n      nextPage = nextPage || pageNum + 1;\n      setPageNum(nextPage);\n\n      if (nextPage > totalPage) {\n        setHasMore(false);\n      }\n    } catch (e) {\n      setError(e);\n    } finally {\n      setLoading(false);\n    }\n  }, [loadFn, pageNum, pageSize, dataList]);\n  const clear = useCallback(() => {\n    setLoading(false);\n    setPageNum(defaultPage);\n    setDataList([]);\n    setHasMore(true);\n    setError(null);\n  }, [defaultPage]);\n  useEffect(() => {\n    if (immediate) {\n      initLoad();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  return {\n    load: initLoad,\n    loading,\n    hasMore,\n    list: dataList,\n    error,\n    clear\n  };\n}","map":null,"metadata":{},"sourceType":"module"}