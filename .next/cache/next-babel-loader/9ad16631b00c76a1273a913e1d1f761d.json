{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport './styles.scss';\nimport { resetTag, thunkUpdTag, updTag } from \"@src/reducers/tag/actions\";\nimport { Header, Link } from \"@src/components\";\nimport { getTagList } from \"@src/services/tag\";\nimport { useTitle } from \"@src/hooks\";\n\nvar Tag = function Tag(props) {\n  var isServerSucceed = props.isServerSucceed;\n  useTitle('标签分类');\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.tag;\n  }),\n      tagList = _useSelector.tagList,\n      tagMap = _useSelector.tagMap;\n\n  var getTagList = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", dispatch(thunkUpdTag()));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [dispatch]);\n  useEffect(function () {\n    if (!isServerSucceed) {\n      getTagList();\n    }\n\n    return function () {\n      dispatch(resetTag());\n    };\n  }, []);\n  return __jsx(\"div\", {\n    className: \"tag-wrapper\"\n  }, __jsx(Header, null), __jsx(\"div\", {\n    className: \"tag-content\"\n  }, __jsx(\"div\", {\n    className: \"tag-title\"\n  }, \"\\u5168\\u90E8\\u5206\\u7C7B\"), __jsx(\"div\", {\n    className: \"tag-center\"\n  }, __jsx(\"div\", {\n    className: \"tag-list\"\n  }, tagList.map(function (tag) {\n    return __jsx(Link, {\n      className: \"tag-item\",\n      key: tag,\n      to: \"/tagList?key=\".concat(tagMap[tag].value)\n    }, tag);\n  })))));\n};\n\nTag.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(context) {\n    var reduxStore, _yield$getTagList, data;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            reduxStore = context.reduxStore;\n            _context2.next = 3;\n            return getTagList();\n\n          case 3:\n            _yield$getTagList = _context2.sent;\n            data = _yield$getTagList.data;\n            reduxStore.dispatch(updTag(data));\n            return _context2.abrupt(\"return\", {\n              serverList: data,\n              isServerSucceed: true\n            });\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Tag;","map":null,"metadata":{},"sourceType":"module"}