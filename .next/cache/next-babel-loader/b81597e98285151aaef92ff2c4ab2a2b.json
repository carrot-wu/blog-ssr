{"ast":null,"code":"import { useState } from 'react';\nimport { isFunction } from \"@src/utils/checkType\"; // 灵感来源于知乎上的筛选出符合函数的类型\n\n/**\n *  接受一个值和方法进行hooks化\n * @param {T} initState 初始化值\n * @param {K} methods 需要hooks话的方法\n * @returns {[T, ReturnMethods<K, T>]}\n */\nfunction useMethods(initState, methods) {\n  const {\n    0: value,\n    1: setValue\n  } = useState(() => initState);\n  const methodsTypes = Object.keys(methods);\n  const boundMethods = methodsTypes.reduce((newMethods, name) => {\n    const fn = methods[name];\n\n    if (isFunction(fn)) {\n      newMethods[name] = (...args) => {\n        setValue(value => fn(value, ...args));\n      };\n    }\n\n    return newMethods;\n  }, {});\n  return [value, boundMethods];\n}\n\nexport default useMethods;","map":null,"metadata":{},"sourceType":"module"}