{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport './styles.scss';\nimport { resetTag, thunkUpdTag, updTag } from \"@src/reducers/tag/actions\";\nimport { Header, Link } from \"@src/components\";\nimport { getTagList } from \"@src/services/tag\";\nimport { useTitle } from \"@src/hooks\";\n\nconst Tag = props => {\n  const {\n    isServerSucceed\n  } = props;\n  useTitle('标签分类');\n  const dispatch = useDispatch();\n  const {\n    tagList,\n    tagMap\n  } = useSelector(state => state.tag);\n  const getTagList = useCallback(async () => dispatch(thunkUpdTag()), [dispatch]);\n  useEffect(() => {\n    if (!isServerSucceed) {\n      getTagList();\n    }\n\n    return () => {\n      dispatch(resetTag());\n    };\n  }, []);\n  return __jsx(\"div\", {\n    className: \"tag-wrapper\"\n  }, __jsx(Header, null), __jsx(\"div\", {\n    className: \"tag-content\"\n  }, __jsx(\"div\", {\n    className: \"tag-title\"\n  }, \"\\u5168\\u90E8\\u5206\\u7C7B\"), __jsx(\"div\", {\n    className: \"tag-center\"\n  }, __jsx(\"div\", {\n    className: \"tag-list\"\n  }, tagList.map(tag => __jsx(Link, {\n    className: \"tag-item\",\n    key: tag,\n    to: `/tagList?key=${tagMap[tag].value}`\n  }, tag))))));\n};\n\nTag.getInitialProps = async context => {\n  const {\n    reduxStore\n  } = context;\n  const {\n    data\n  } = await getTagList();\n  reduxStore.dispatch(updTag(data));\n  return {\n    serverList: data,\n    isServerSucceed: true\n  };\n};\n\nexport default Tag;","map":null,"metadata":{},"sourceType":"module"}