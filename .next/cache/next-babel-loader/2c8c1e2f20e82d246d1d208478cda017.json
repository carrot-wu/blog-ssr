{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useState, useCallback, useEffect } from \"react\";\nexport default function useInfinite(loadFn) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$pageSize = options.pageSize,\n      pageSize = _options$pageSize === void 0 ? 10 : _options$pageSize,\n      _options$defaultPage = options.defaultPage,\n      defaultPage = _options$defaultPage === void 0 ? 1 : _options$defaultPage,\n      _options$immediate = options.immediate,\n      immediate = _options$immediate === void 0 ? false : _options$immediate,\n      _options$hasMore = options.hasMore,\n      defaultHasMore = _options$hasMore === void 0 ? true : _options$hasMore,\n      _options$defaultList = options.defaultList,\n      defaultList = _options$defaultList === void 0 ? [] : _options$defaultList,\n      _options$defaultLoadi = options.defaultLoading,\n      defaultLoading = _options$defaultLoadi === void 0 ? true : _options$defaultLoadi; // loadFn 是一个异步函数 最终返回的res 包含 {data, pageNo, totalPage}\n\n  var _useState = useState(defaultLoading),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(defaultPage),\n      pageNum = _useState2[0],\n      setPageNum = _useState2[1];\n\n  var _useState3 = useState(defaultList),\n      dataList = _useState3[0],\n      setDataList = _useState3[1];\n\n  var _useState4 = useState(defaultHasMore),\n      hasMore = _useState4[0],\n      setHasMore = _useState4[1];\n\n  var _useState5 = useState(null),\n      error = _useState5[0],\n      setError = _useState5[1];\n\n  var initLoad = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var result, nextPage, totalPage, list;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setError(null);\n            setLoading(true);\n            _context.next = 5;\n            return loadFn({\n              pageNum: pageNum,\n              pageSize: pageSize\n            });\n\n          case 5:\n            result = _context.sent;\n            nextPage = result.nextPage, totalPage = result.totalPage, list = result.list;\n            setDataList(dataList.concat(list));\n            nextPage = nextPage || pageNum + 1;\n            setPageNum(nextPage);\n\n            if (nextPage > totalPage) {\n              setHasMore(false);\n            }\n\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](0);\n            setError(_context.t0);\n\n          case 16:\n            _context.prev = 16;\n            setLoading(false);\n            return _context.finish(16);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 13, 16, 19]]);\n  })), [loadFn, pageNum, pageSize, dataList]);\n  var clear = useCallback(function () {\n    setLoading(false);\n    setPageNum(defaultPage);\n    setDataList([]);\n    setHasMore(true);\n    setError(null);\n  }, [defaultPage]);\n  useEffect(function () {\n    if (immediate) {\n      initLoad();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  return {\n    load: initLoad,\n    loading: loading,\n    hasMore: hasMore,\n    list: dataList,\n    error: error,\n    clear: clear\n  };\n}","map":null,"metadata":{},"sourceType":"module"}