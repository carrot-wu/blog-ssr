{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useCallback } from 'react';\nimport { useRouter } from 'next/router';\nimport useInfinite from \"@src/hooks/useInfinite\";\nimport { BottomBar, Banner, Header, Button, Loading, BottomLine, Article } from \"@src/components/index\";\nimport './style.scss';\nimport { getArticleList } from \"@src/services/article\";\nexport const getServerSideProps = async context => {\n  const {\n    query\n  } = context;\n  const {\n    key\n  } = query;\n  let pageNum = 1;\n  let hasMore = true;\n  let list;\n  const {\n    data\n  } = await getArticleList({\n    pageNum,\n    pageSize: 5,\n    tag: key\n  });\n\n  if (data.totalPage <= pageNum) {\n    hasMore = false;\n  }\n\n  pageNum += 1;\n  list = data.list;\n  return {\n    props: {\n      serverSucceed: true,\n      serverPageNum: pageNum,\n      serverHasMore: hasMore,\n      serverList: list\n    }\n  };\n};\n\nconst TagList = props => {\n  const {\n    serverPageNum,\n    serverSucceed,\n    serverHasMore,\n    serverList = []\n  } = props;\n  const router = useRouter();\n  const key = router.query.key;\n  const getArticleListFn = useCallback(async ({\n    pageSize,\n    pageNum\n  }) => {\n    const {\n      data\n    } = await getArticleList({\n      pageSize,\n      pageNum,\n      tag: key\n    });\n    return data;\n  }, [key]); //封装分页详情\n\n  const {\n    load,\n    hasMore,\n    loading,\n    list\n  } = useInfinite(getArticleListFn, {\n    pageSize: 5,\n    immediate: !serverSucceed,\n    defaultPage: serverPageNum,\n    hasMore: serverHasMore,\n    defaultList: serverList,\n    defaultLoading: !serverSucceed\n  }); // 跳转详情\n\n  const goPost = useCallback(id => {\n    return () => router.push(`/post/${id}`);\n  }, [router]);\n  return __jsx(\"div\", {\n    className: \"home\"\n  }, __jsx(Header, null), __jsx(Banner, null), __jsx(\"div\", {\n    className: \"homeContent\"\n  }, list.map(article => __jsx(Article, _extends({\n    key: article.id\n  }, article, {\n    onClick: goPost(article.id)\n  }))), __jsx(\"div\", {\n    className: \"loadBar\"\n  }, loading ? __jsx(Loading, null, \"\\u52A0\\u8F7D\\u4E2D...\") : hasMore ? __jsx(Button, {\n    onClick: load\n  }, \"\\u52A0\\u8F7D\\u66F4\\u591A\") : __jsx(BottomLine, {\n    lineWidth: 100\n  }))), __jsx(BottomBar, null));\n};\n\nexport default TagList;","map":null,"metadata":{},"sourceType":"module"}