{"ast":null,"code":"// 检查类型的策略模式\nvar typeToString = Object.prototype.toString;\n\nvar checkType = function checkType(type) {\n  return function (val) {\n    return typeToString.call(val).slice(8, -1).toLowerCase() === type.toLowerCase();\n  };\n};\n\nvar isNumber = checkType('number');\nvar isArray = checkType('array');\nvar isBoolean = checkType('boolean');\nvar isPlainObject = checkType('object');\nvar isAsyncFunction = checkType('asyncFunction');\nvar isPromise = checkType('promise');\nvar isUndefined = checkType('undefined');\nvar isString = checkType('string');\nvar isSymbol = checkType('symbol');\nvar isDate = checkType('date');\nvar isError = checkType('error');\n\nvar isFunction = function isFunction(val) {\n  return typeof val === 'function';\n};\n\nexport { isNumber, isArray, isBoolean, isPlainObject, isFunction, isPromise, isAsyncFunction, isUndefined, isString, isSymbol, isDate, isError };","map":null,"metadata":{},"sourceType":"module"}